package com.yzgeneration.evc.mock.chat;

import com.yzgeneration.evc.common.dto.SliceResponse;
import com.yzgeneration.evc.domain.chat.dto.ChatRoomListResponse;
import com.yzgeneration.evc.domain.chat.infrastructure.ChatMessageRepository;
import com.yzgeneration.evc.domain.chat.model.ChatMessage;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class FakeChatMessageRepository implements ChatMessageRepository {

    private static Long autoGeneratedId = 0L;
    private final List<ChatMessage> data = new ArrayList<>();

    @Override
    public ChatMessage save(ChatMessage chatMessage) {
        if (chatMessage.getId() == null || chatMessage.getId() == 0) {
            ChatMessage newChatMessage = ChatMessage.builder()
                    .id(++autoGeneratedId)
                    .chatRoomId(chatMessage.getChatRoomId())
                    .senderId(chatMessage.getSenderId())
                    .content(chatMessage.getContent())
                    .isRead(chatMessage.getIsRead())
                    .createdAt(chatMessage.getCreatedAt())
                    .build();
            data.add(newChatMessage);
            return newChatMessage;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), chatMessage.getId()));
            data.add(chatMessage);
            return chatMessage;
        }

    }

    @Override
    public SliceResponse<ChatRoomListResponse> getLastMessages(Long memberId, LocalDateTime cursor) {
        return null;
    }

}
